services:
  db:
    image: postgres:16
    env_file: .env             # POSTGRES_USER / POSTGRES_PASSWORD etc.
    environment:               # ‚Üê ADD this block
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER:-carboncore}"]
      interval: 10s
      timeout: 5s
      start_period: 40s               # give Postgres time to initialise
      retries: 5

  redis:
    image: redis:7
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      start_period: 40s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: backend.Dockerfile
    env_file: .env
    environment:
      #‚ÄÉüëá bypass AWS Secrets Manager when developing locally
      BYPASS_AWS_SECRETS: "1"
      #‚ÄÉoptional ‚Äì override default fallback values if you wish
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      REDIS_URL: "redis://redis:6379/0"
    ports:
      - "8000:8000"
    # entrypoint: ["/usr/local/bin/entrypoint.sh"]   # Alembic ‚ûú Gunicorn
    depends_on:
      db:    { condition: service_healthy }
      redis: { condition: service_healthy }
    read_only: true
    tmpfs:
       - /tmp
       - /var/tmp
    security_opt:
      - no-new-privileges:true
    